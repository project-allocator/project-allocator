services:
  frontend:
    build:
      context: ./frontend
      dockerfile: dev.Dockerfile
    environment:
      API_URL: http://backend:8000
    develop:
      watch:
        - action: sync
          path: ./frontend/src
          target: /app/src
        - action: rebuild
          path: package.json
    ports:
      - 3000:3000
  backend:
    build:
      context: ./backend
      dockerfile: dev.Dockerfile
    command: poetry run fastapi run --reload
    environment:
      PGUSER: pa_user
      PGPASSWORD: pa_pass
      PGHOST: db
      PGPORT: 5432
      PGDATABASE: project-allocator-db-local
    develop:
      watch:
        - action: sync
          path: ./backend/src
          target: /api/src
        - action: sync
          path: ./backend/migrations
          target: /api/migrations
        - action: rebuild
          path: pyproject.toml
    ports:
      - 8000:8000
    depends_on:
      - db
  db:
    image: postgres:14-alpine
    restart: always
    environment:
      POSTGRES_DB: project-allocator-db-local
      POSTGRES_USER: pa_user
      POSTGRES_PASSWORD: pa_pass
    ports:
      - 5432:5432
